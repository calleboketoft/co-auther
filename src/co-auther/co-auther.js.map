{"version":3,"sources":["co-auther/co-auther.ts"],"names":["activationHelper","routeTo","CoAuther","CoAuther.isInitialDataLoaded","CoAuther.loginWrap","CoAuther.logoutWrap","CoAuther.makeInitialRequestWrap","initialize","clearAuthData","getAuthData","setAuthData"],"mappings":"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QACrDA,CAACA;QACDA,EAAEA,CAACA,CAACA,SAASA,CAACA,MAAMA,CAACA,cAAcA,CAACA,CAACA,CAACA;YACpCA,MAAMA,CAACA,eAAeA,GAAGA,SAASA,CAACA,MAAMA,CAACA,cAAcA,CAAAA;QAC1DA,CAACA;IACHA,CAACA;AACHA,CAACA;AAqBC,kBAAU,cArBX;AAED;IACEC,EAAEA,CAACA,CAACA,CAACA,qBAAqBA,CAACA,CAACA,CAACA;QAC3BA,YAAYA,CAACA,UAAUA,CAACA,MAAMA,CAACA,SAASA,CAACA,CAAAA;IAC3CA,CAACA;AACHA,CAACA;AAED;IACEC,IAAIA,cAAcA,GAAGA,YAAYA,CAACA,OAAOA,CAACA,MAAMA,CAACA,SAASA,CAACA,CAAAA;IAC3DA,IAAIA,QAAQA,GAAGA,cAAcA,GAAGA,IAAIA,CAACA,KAAKA,CAACA,cAAcA,CAACA,GAAGA,IAAIA,CAAAA;IACjEA,MAAMA,CAACA,QAAQA,CAAAA;AACjBA,CAACA;AAED,qBAAsB,GAAG;IACvBC,EAAEA,CAACA,CAACA,CAACA,qBAAqBA,CAACA,CAACA,CAACA;QAC3BA,YAAYA,CAACA,OAAOA,CAACA,MAAMA,CAACA,SAASA,EAAEA,IAAIA,CAACA,SAASA,CAACA,GAAGA,CAACA,IAAIA,EAAEA,CAACA,CAACA,CAAAA;IACpEA,CAACA;AACHA,CAACA;AAMA","file":"co-auther/co-auther.js","sourcesContent":["let dontTouchLocalStorage = false\nlet coAuther\nlet getCoAuther = function () {\n  if (!coAuther) {\n    throw 'CoAuther has not been initialized yet'\n  } else {\n    return coAuther\n  }\n}\n\nlet config = {\n  LOGGED_IN: 'loggedIn',\n  AUTHENTICATE: 'authenticate',\n  INITIAL_REQUEST: 'initialRequest',\n  AUTH_DATA: 'authData'\n}\n\n// Determine if a route canActivate or not\nfunction activationHelper (currentPage) {\n  let canActivate = false\n  let destinationRoute = null\n  let authData = getCoAuther().getAuthData()\n  let initialDataLoaded = getCoAuther().isInitialDataLoaded()\n  if (authData && initialDataLoaded) {\n    // authData and initialRequest done, you are logged in\n    destinationRoute = config.LOGGED_IN\n    canActivate = currentPage === destinationRoute\n  } else if (!authData) {\n    destinationRoute = config.AUTHENTICATE\n    canActivate = currentPage === destinationRoute\n  } else {\n    destinationRoute = config.INITIAL_REQUEST\n    canActivate = currentPage === destinationRoute\n    getCoAuther().makeInitialRequestWrap().then(() => {\n      // initialRequest done, move on to logged in\n      routeTo(config.LOGGED_IN)\n    })\n  }\n  if (!canActivate) {\n    routeTo(destinationRoute)\n  }\n  return canActivate\n}\n\n// TODO this should be replaced with the \"correct\" routing strategy\nfunction routeTo (afterHash) {\n  let loc = window.location\n  window.location.href = `${loc.protocol}//${loc.host}${loc.pathname}#/${afterHash}`\n}\n\nfunction CoAuther (apiService) {\n  let initialDataLoaded = false\n  function isInitialDataLoaded () {\n    return initialDataLoaded\n  }\n  let initialRequestRes\n\n  function loginWrap (...args) {\n    apiService.login.apply(apiService, args)\n      .then((res) => {\n        // authData has arrived, go make initial request\n        setAuthData(res)\n        routeTo(config.INITIAL_REQUEST)\n      })\n      .catch((err) => {\n        // Login failed, handle\n        console.log('login fail')\n      })\n  }\n\n  function logoutWrap (...args) {\n    apiService.logout.apply(apiService, args)\n      .then(() => {\n        clearAuthData()\n        // Logged out, go to authenticate page\n        routeTo(config.AUTHENTICATE)\n      })\n  }\n\n  function makeInitialRequestWrap () {\n    return new Promise ((resolve, reject) => {\n      apiService.makeInitialRequest()\n        .then(() => {\n          // Flag for intial data\n          initialDataLoaded = true\n          resolve()\n        })\n        .catch((error) => {\n          // TODO handle failed initial request\n          clearAuthData()\n          reject()\n        })\n    })\n  }\n\n  return {\n    makeInitialRequestWrap,\n    loginWrap,\n    getAuthData,\n    logoutWrap,\n    isInitialDataLoaded\n  }\n}\n\nfunction initialize (apiService, newConfig) {\n  coAuther = CoAuther(apiService)\n  if (newConfig.authData) {\n    config.AUTH_DATA = newConfig.authData\n  }\n  if (newConfig.dontTouchLocalStorage) {\n    dontTouchLocalStorage = true\n  }\n  if (newConfig.routes) {\n    if (newConfig.routes.loggedIn) {\n      config.LOGGED_IN = newConfig.routes.loggedIn\n    }\n    if (newConfig.routes.authenticate) {\n      config.AUTHENTICATE = newConfig.routes.authenticate\n    }\n    if (newConfig.routes.initialRequest) {\n      config.INITIAL_REQUEST = newConfig.routes.initialRequest\n    }\n  }\n}\n\nfunction clearAuthData () {\n  if (!dontTouchLocalStorage) {\n    localStorage.removeItem(config.AUTH_DATA)\n  }\n}\n\nfunction getAuthData () {\n  let authDataString = localStorage.getItem(config.AUTH_DATA)\n  let authData = authDataString ? JSON.parse(authDataString) : null\n  return authData\n}\n\nfunction setAuthData (res) {\n  if (!dontTouchLocalStorage) {\n    localStorage.setItem(config.AUTH_DATA, JSON.stringify(res.json()))\n  }\n}\n\nexport {\n  initialize,\n  getCoAuther,\n  activationHelper\n}\n"],"sourceRoot":"/source/"}